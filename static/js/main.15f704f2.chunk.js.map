{"version":3,"sources":["components/AddTask.js","components/Task.js","components/TaskList.js","components/DoneTask.js","components/DoneTasks.js","components/App.js","serviceWorker.js","index.js"],"names":["AddTask","props","react_default","a","createElement","className","onSubmit","confirmed","type","placeholder","value","onChange","inputChange","taskEndDate","dateChange","checked","priorityChange","Task","now","Date","end","concat","priority","text","onClick","doneButton","id","deleteButton","TaskList","tasks","map","task","index","src_components_Task","key","sort","b","toLowerCase","hide","isHide","length","DoneTask","taskDoneDate","backButton","DoneTasks","src_components_DoneTask","reverse","App","state","newTask","taskList","taskListHide","doneTasks","doneTasksHide","handleInputChange","e","newState","_this","target","setState","handlePriorityChange","handleDate","handleConfirmed","preventDefault","_this$state$newTask","Object","toConsumableArray","alert","handleDoneButton","doneTask","splice","getFullYear","getMonth","toString","padStart","getDate","getHours","getMinutes","getSeconds","handleDeleteButton","handleDeleteFromDoneButton","handleBackToTaskList","handleTaskListHide","handleDoneTasksHide","Fragment","src_components_AddTask","this","src_components_TaskList","src_components_DoneTasks","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.15f704f2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./AddTask.css\";\r\n\r\nconst AddTask = (props) => {\r\n  return (\r\n    <form className=\"App__form\" onSubmit={props.confirmed}>\r\n      <label className=\"App__form-text\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder={\"wpisz coś\"}\r\n          value={props.value}\r\n          onChange={props.inputChange}\r\n        />\r\n      </label>\r\n      <div className=\"App__form-priority\">\r\n        <label className=\"App__form-priority__date\">\r\n          Wybierz datę wykonania:{\" \"}\r\n          <input\r\n            type=\"date\"\r\n            value={props.taskEndDate}\r\n            onChange={props.dateChange}\r\n          />\r\n        </label>\r\n        <label className=\"App__form-priority__importance\">\r\n          Czy zadanie jest ważne?{\" \"}\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={props.checked}\r\n            onChange={props.priorityChange}\r\n          />\r\n        </label>\r\n      </div>\r\n      <button>dodaj zadanie</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import React from \"react\";\r\nimport \"./Task.css\";\r\n\r\nconst Task = (props) => {\r\n  const now = new Date();\r\n  const end = new Date(props.taskEndDate);\r\n\r\n  return (\r\n    <li className=\"App__task-list__task\">\r\n      <div className={`left ${props.priority ? \"priority\" : \"\"}`}>\r\n        {props.text}\r\n      </div>\r\n      <div className=\"right\">\r\n        <p className={now > end ? \"toLate priority\" : null}>\r\n          Termin: {props.taskEndDate}{\" \"}\r\n        </p>\r\n        <div className=\"App__task-list__task-buttons\">\r\n          <button\r\n            className=\"App__task-list__done-button\"\r\n            onClick={() => props.doneButton(props.id)}\r\n          >\r\n            zrobione ✔\r\n          </button>\r\n          <button\r\n            className=\"App__task-list__delete-button\"\r\n            onClick={() => props.deleteButton(props.id)}\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport Task from \"./Task\";\r\nimport \"./TaskList.css\";\r\n\r\nconst TaskList = (props) => {\r\n  const tasks = props.tasks.map((task, index) => (\r\n    <Task\r\n      key={index}\r\n      id={index}\r\n      text={task.text}\r\n      taskEndDate={task.taskEndDate}\r\n      priority={task.priority}\r\n      doneButton={props.doneButton}\r\n      deleteButton={props.deleteButton}\r\n    />\r\n  ));\r\n  tasks.sort((a, b) => {\r\n    a = a.props.text.toLowerCase();\r\n    b = b.props.text.toLowerCase();\r\n\r\n    if (a < b) {\r\n      return -1;\r\n    }\r\n    if (a > b) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  });\r\n\r\n  return (\r\n    <div className=\"App__task-list\">\r\n      <div className=\"App__task-list__header\" onClick={props.hide}>\r\n        <h3>\r\n          {props.isHide\r\n            ? `Lista zadań do zrobienia (${tasks.length}) ⮛ ⮛ ⮛`\r\n            : `Lista zadań do zrobienia (${tasks.length}) ⮙ ⮙ ⮙`}\r\n        </h3>\r\n      </div>\r\n      {props.isHide ? null : <ul>{tasks}</ul>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React from \"react\";\r\nimport \"./DoneTask.css\";\r\n\r\nconst DoneTask = (props) => {\r\n  return (\r\n    <li className=\"App__done-tasks__task\">\r\n      <div className=\"left\">{props.text}</div>{\" \"}\r\n      <div className=\"right\">\r\n        Czas wykonania:\r\n        <br />\r\n        {props.taskDoneDate}\r\n        <div className=\"App__done-tasks__task-buttons\">\r\n          <button\r\n            className=\"App__done-tasks__delete-button\"\r\n            onClick={() => props.deleteButton(props.id)}\r\n          >\r\n            ×\r\n          </button>\r\n          <button\r\n            className=\"App__done-tasks__back-button\"\r\n            onClick={() => props.backButton(props.id)}\r\n          >\r\n            cofnij ⮌\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default DoneTask;\r\n","import React from \"react\";\r\nimport DoneTask from \"./DoneTask\";\r\nimport \"./DoneTasks.css\";\r\n\r\nconst DoneTasks = (props) => {\r\n  const tasks = props.tasks.map((task, index) => (\r\n    <DoneTask\r\n      key={index}\r\n      id={index}\r\n      text={task.text}\r\n      taskDoneDate={task.taskDoneDate}\r\n      deleteButton={props.deleteButton}\r\n      backButton={props.backButton}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div className=\"App__done-tasks\">\r\n      <div className=\"App__done-tasks__header\" onClick={props.hide}>\r\n        <h3>\r\n          {props.isHide\r\n            ? `Zadania zrobione (${tasks.length}) ⮛ ⮛ ⮛`\r\n            : `Zadania zrobione (${tasks.length}) ⮙ ⮙ ⮙`}\r\n        </h3>\r\n      </div>\r\n      <ul>{props.isHide ? null : tasks.reverse()}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoneTasks;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport AddTask from \"./AddTask\";\nimport TaskList from \"./TaskList\";\nimport DoneTasks from \"./DoneTasks\";\n\nclass App extends Component {\n  state = {\n    newTask: {\n      text: \"\",\n      priority: false,\n      taskEndDate: \"\",\n    },\n    taskList: [\n      {\n        text: \"Skończyć pisać „to do app”\",\n        priority: false,\n        taskEndDate: \"2023-03-24\",\n      },\n      {\n        text: \"Nauczyć się pisać bez litrówek\",\n        priority: true,\n        taskEndDate: \"2024-10-02\",\n      },\n      {\n        text: \"Zmienić to schemat sortowania w tej aplikacji\",\n        priority: false,\n        taskEndDate: \"2023-05-07\",\n      },\n      {\n        text:\n          \"Napisać rozprawkę na temat wyższości warzyw nad owocami lub odwrotnie. Poprzeć dziesięcioma argumentami i udostępnić w internecie, po 10 dniach usunąć i udawać, że to się nigdy nie zdarzyło\",\n        priority: false,\n        taskEndDate: \"2023-04-13\",\n      },\n    ],\n    taskListHide: false,\n    doneTasks: [],\n    doneTasksHide: true,\n  };\n\n  handleInputChange = (e) => {\n    const newState = this.state.newTask;\n    newState.text = e.target.value;\n    this.setState({ newTask: newState });\n  };\n  handlePriorityChange = () => {\n    const newState = this.state.newTask;\n    newState.priority = !newState.priority;\n    this.setState({ newTask: newState });\n  };\n\n  handleDate = (e) => {\n    const newState = this.state.newTask;\n    newState.taskEndDate = e.target.value;\n    this.setState({ newTask: newState });\n  };\n  handleConfirmed = (e) => {\n    e.preventDefault();\n\n    const { text, priority, taskEndDate } = this.state.newTask;\n    if (text !== \"\" && taskEndDate !== \"\") {\n      const newTask = {\n        text,\n        priority,\n        taskEndDate,\n      };\n\n      const taskList = [...this.state.taskList].concat(newTask);\n      this.setState({\n        newTask: {\n          text: \"\",\n          priority: false,\n          taskEndDate: \"\",\n        },\n        taskList,\n      });\n    } else alert(\"Tekst zadania oraz data wykonania są wymagane\");\n  };\n\n  handleDoneButton = (id) => {\n    const taskList = [...this.state.taskList];\n    const doneTask = taskList.splice(id, 1);\n    const now = new Date();\n\n    doneTask[0].taskDoneDate = `${now.getFullYear()}-${(now.getMonth() + 1)\n      .toString()\n      .padStart(2, \"0\")}-${now\n      .getDate()\n      .toString()\n      .padStart(2, \"0\")}, ${now.getHours()}:${now\n      .getMinutes()\n      .toString()\n      .padStart(2, \"0\")}:${now\n      .getSeconds()\n      .toString()\n      .padStart(2, \"0\")}`;\n    const doneTasks = [...this.state.doneTasks].concat(doneTask);\n    this.setState({ taskList, doneTasks });\n  };\n  handleDeleteButton = (id) => {\n    const taskList = [...this.state.taskList];\n    taskList.splice(id, 1);\n    this.setState({ taskList });\n  };\n  handleDeleteFromDoneButton = (id) => {\n    const doneTasks = [...this.state.doneTasks];\n    doneTasks.splice(id, 1);\n    this.setState({ doneTasks });\n  };\n  handleBackToTaskList = (id) => {\n    const doneTasks = [...this.state.doneTasks];\n    const newTask = doneTasks.splice(id, 1);\n    const taskList = [...this.state.taskList].concat(newTask);\n    this.setState({ doneTasks, taskList });\n  };\n\n  handleTaskListHide = (e) => {\n    this.setState({ taskListHide: !this.state.taskListHide });\n  };\n  handleDoneTasksHide = (e) => {\n    this.setState({ doneTasksHide: !this.state.doneTasksHide });\n  };\n\n  render() {\n    return (\n      <>\n        <div className=\"App\">\n          <div className=\"App__title\">\n            <h1>„to do” (zrobienia)</h1>\n          </div>\n          <AddTask\n            value={this.state.newTask.text}\n            inputChange={this.handleInputChange}\n            checked={this.state.newTask.priority}\n            priorityChange={this.handlePriorityChange}\n            taskEndDate={this.state.newTask.taskEndDate}\n            dateChange={this.handleDate}\n            confirmed={this.handleConfirmed}\n          />\n          {this.state.taskList.length === 0 ? null : (\n            <TaskList\n              tasks={this.state.taskList}\n              doneButton={this.handleDoneButton}\n              deleteButton={this.handleDeleteButton}\n              isHide={this.state.taskListHide}\n              hide={this.handleTaskListHide}\n            />\n          )}\n          {this.state.doneTasks.length === 0 ? null : (\n            <DoneTasks\n              tasks={this.state.doneTasks}\n              deleteButton={this.handleDeleteFromDoneButton}\n              backButton={this.handleBackToTaskList}\n              isHide={this.state.doneTasksHide}\n              hide={this.handleDoneTasksHide}\n            />\n          )}\n          <div className=\"App__footer\">Czy ktoś umie w design? 2023</div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}